@model SISASEPBA.Models.Conceptos

<link href="~/Content/Switch.css" rel="stylesheet" type="text/css">

@{
    ViewBag.Title = "Edit";

    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Concepto nómina",
        Value = "Concepto nomina",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "Concepto liquidación",
        Value = "Concepto liquidacion",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "Concepto fórmula",
        Value = "Concepto formula",
        Selected = true
    });


}

<div class="panel panel-default">
    <div class="panel panel-heading">
        <strong>Editar</strong>
    </div>
    <div class="panel panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Concepto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Concepto, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Concepto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TipoConcepto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("TipoConcepto", listItems, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TipoConcepto, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Unidad, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Unidad, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Unidad, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Salarial, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.Salarial, new { @class = "toggle-switch" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Fijo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.Fijo, new { @class = "toggle-switch" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Liquidable, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.Liquidable, new { @class = "toggle-switch" })
                            @Html.ValidationMessageFor(model => model.Liquidable, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Excluyente, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.Excluyente, new { @class = "toggle-switch" })
                            @Html.ValidationMessageFor(model => model.Excluyente, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CantidadEditable, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.CantidadEditable, new { @class = "toggle-switch" })
                            @Html.ValidationMessageFor(model => model.CantidadEditable, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(model => model.MontoEditable, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.MontoEditable, new { @class = "toggle-switch" })
                            @Html.ValidationMessageFor(model => model.MontoEditable, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UsaCantidad, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.UsaCantidad, new { @class = "toggle-switch" })
                            @Html.ValidationMessageFor(model => model.UsaCantidad, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.UsaMonto, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.UsaMonto, new { @class = "toggle-switch" })
                            @Html.ValidationMessageFor(model => model.UsaMonto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FormulaDefinida, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.FormulaDefinida, new { @class = "toggle-switch" })
                            @Html.ValidationMessageFor(model => model.FormulaDefinida, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ImprimeComprobante, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.ImprimeComprobante, new { @class = "toggle-switch" })
                            @Html.ValidationMessageFor(model => model.ImprimeComprobante, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ImprimeAcumulado, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.CheckBoxFor(model => model.ImprimeAcumulado, new { @class = "toggle-switch" })
                            @Html.ValidationMessageFor(model => model.ImprimeAcumulado, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FactorRedondeo, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.FactorRedondeo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.FactorRedondeo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-4 col-md-6">
                        <input type="submit" value="Crear" class="btn btn-success" />
                        @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }

    </div>
</div>

<div class="form-group">
    @Html.HiddenFor(model => model.UsuarioCreacion, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.HiddenFor(model => model.UsuarioCreacion, new { htmlAttributes = new { @class = "form-control" } })
    </div>
</div>

<div class="form-group">
    @Html.HiddenFor(model => model.FechaCreacion, htmlAttributes: new { @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.HiddenFor(model => model.FechaCreacion, new { htmlAttributes = new { @class = "form-control" } })
    </div>
</div>
            </div>

<div class="form-group">
    <div class="col-md-offset-4 col-md-6">
        <input type="submit" value="Guardar cambios" class="btn btn-success" />
        @Html.ActionLink("Cancelar", "Index", null, new { @class = "btn btn-danger" })
    </div>
</div>
        </div>
            }

        </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}


