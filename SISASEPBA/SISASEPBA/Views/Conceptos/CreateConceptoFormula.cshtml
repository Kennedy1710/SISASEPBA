@model SISASEPBA.Models.ConceptoFormula

@{
    ViewBag.Title = "Crear concepto Formula";
    

    List <SelectListItem> list = new List<SelectListItem>();
    list.Add(new SelectListItem
    {
        Text = "Sí",
        Value = "true",
        Selected = true
    }) ;
    list.Add(new SelectListItem
    {
        Text = "No",
        Value = "false",
        Selected = true
    });

}

<div class="panel panel-default">
    <div class="panel panel-heading">
        <strong>Crear Concepto Formula</strong>
    </div>
    <div class="panel panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

          
            <div class="form-group">
                @Html.LabelFor(model => model.IdConcepto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Concepto", new SelectList(ViewBag.concepto, "IdConcepto", "Concepto"), new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.IdConcepto, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Secuencia, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Secuencia, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Secuencia, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ValorInicial, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ValorInicial, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ValorInicial, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ValorFinal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ValorFinal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ValorFinal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CantidadMonto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CantidadMonto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CantidadMonto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NivelFormula, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NivelFormula, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NivelFormula, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsaCantidad, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UsaCantidad", list, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UsaCantidad, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UsaMonto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UsaMonto", list, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.UsaMonto, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Crear" class="btn btn-success" />
                    @Html.ActionLink("Cancelar", "IndexConceptoFormula", null, new { @class = "btn btn-danger" })
                </div>
            </div>
        </div>
        }

    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
