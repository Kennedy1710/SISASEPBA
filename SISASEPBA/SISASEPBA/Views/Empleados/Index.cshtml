@model IEnumerable<SISASEPBA.Models.Empleado>

@{
    ViewBag.Title = "Index";
}

<div class="panel panel-default">
    <div class="panel panel-heading">
        <strong>Catálogo empleados</strong>
    </div>
    <div class="panel panel-body">

        <p>
            @Html.ActionLink("Nuevo empleado", "APContratacion", "AccionesDePersonal", null, new { @class = "btn btn-primary" })
        </p>

        <div class="table-responsive">

            <table class="table table-striped table-bordered" id="tablaEmpleados" >
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.CodigoEmpleado)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PrimerNombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SegundoNombre)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PrimerApellido)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.SegundoApellido)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IdDepartamento)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.IdPuesto)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Estado)
                        </th>
                        <th>
                            Acción
                        </th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.CodigoEmpleado)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PrimerNombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SegundoNombre)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PrimerApellido)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.SegundoApellido)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IdDepartamento)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.IdPuesto)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Estado)
                            </td>
                            <td>
                               @*@Html.ActionLink("Editar", "Edit", new { id = item.IdEmpleado }) /*@
                                @*@Html.ActionLink("Cambiar nombre", "APCambioDeNombre", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Ascender", "APAscenso", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Ausencia justificada", "APAusenciaJustificada", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Ausencia injustificada", "APAusenciaInjustificada", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Cambio de departamento", "APCambioDeDepartamento", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Cambio de identificación", "APCambioDeIdentificacion", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Cambio de nómina", "APCambioDeNomina", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Cambio de número de seguro", "APCambioDeNumeroDeSeguro", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Cambio de puesto", "APCambioDePuesto", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Cambio de régimen vacacional", "APCambioDeRegimenVacacional", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Cambio de salario", "APCambioDeSalario", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Días pagados de más", "APDiasPagadosDeMas", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Incapacidad INS", "APIncapacidadINS", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Incapacidad por maternidad", "APIncapacidadMaternidad", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Incapacidad CCSS", "APIncapacidadCCSS", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Liquidación por abandono", "APLiquidacionPorAbandono", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Liquidación por despido con responsabilidad", "APLiquidacionPorDespidoConResponsabilidad", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Liquidación por despido sin responsabilidad", "APLiquidacionPorDespidoSinResponsabilidad", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Liquidación por pensión", "APLiquidacionPorPension", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Liquidación por renuncia", "APLiquidacionPorRenuncia", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Permiso con goce salarial", "APPermisoConGoceDeSalario", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Permiso sin goce salarial", "APPermisoSinGoceDeSalario", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Vacaciones acumuladas", "APVacacionesAcumuladas", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /
                                    @Html.ActionLink("Vacaciones disfrutadas", "APVacacionesDisfrutadas", "AccionesDePersonal", new { id = item.IdEmpleado }, null) /*@

                                <div class="dropdown">
                                    <button data-toggle="dropdown" class="btn btn-danger dropdown-toggle">
                                        Acción de personal
                                        <span class="caret"></span>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li>@Html.ActionLink("Ascender", "APAscenso", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Ausencias", "APAusenciaJustificada", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Cambio de departamento", "APCambioDeDepartamento", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Cambio de identificación", "APCambioDeIdentificacion", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Cambiar nombre", "APCambioDeNombre", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Cambio de nómina", "APCambioDeNomina", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Cambio de número de seguro", "APCambioDeNumeroDeSeguro", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Cambio de puesto", "APCambioDePuesto", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Cambio de régimen vacacional", "APCambioDeRegimenVacacional", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Cambio de salario", "APCambioDeSalario", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Días pagados de más", "APDiasPagadosDeMas", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Incapacidades", "APIncapacidadINS", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Liquidaciones", "APLiquidacionPorAbandono", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Permisos", "APPermisoConGoceDeSalario", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Vacaciones acumuladas", "APVacacionesAcumuladas", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                        <li>@Html.ActionLink("Vacaciones disfrutadas", "APVacacionesDisfrutadas", "AccionesDePersonal", new { id = item.IdEmpleado }, null)</li>
                                    </ul>
                                </div>

                            </td>

                        </tr>

                    }
                </tbody>


            </table>

        </div>

    </div>
</div>

@*<div class="dropdown">
        <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown">
            Acción de personal
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu">
            <li><a href="#">HTML</a></li>
            <li><a href="#">CSS</a></li>
            <li><a href="#">JavaScript</a></li>
        </ul>
    </div>*@

@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            //var rowsSelected = [];
            $('#tablaEmpleados').DataTable({
                "language": {
                    "sProcessing": "Procesando...",
                    "sLengthMenu": "Mostrar _MENU_ registros",
                    "sZeroRecords": "No se encontraron resultados",
                    "sEmptyTable": "Ningún dato disponible en esta tabla",
                    "sInfo": "Mostrando registros del _START_ al _END_ de un total de _TOTAL_ registros",
                    "sInfoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "sInfoFiltered": "(filtrado de un total de _MAX_ registros)",
                    "sInfoPostFix": "",
                    "sSearch": "Buscar:",
                    "sUrl": "",
                    "sInfoThousands": ",",
                    "sLoadingRecords": "Cargando...",
                    "oPaginate": {
                        "sFirst": "Primero",
                        "sLast": "Último",
                        "sNext": "Siguiente",
                        "sPrevious": "Anterior"
                    },
                    "oAria": {
                        "sSortAscending": ": Activar para ordenar la columna de manera ascendente",
                        "sSortDescending": ": Activar para ordenar la columna de manera descendente"
                    }

                }

            });
        });
    </script>
}