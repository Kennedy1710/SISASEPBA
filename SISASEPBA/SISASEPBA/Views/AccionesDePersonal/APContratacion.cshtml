@model SISASEPBA.Models.APContratacion

<link href="~/Content/Switch.css" rel="stylesheet" type="text/css">

@{
    ViewBag.Title = "Contratación";

    List<SelectListItem> sexo = new List<SelectListItem>();
    sexo.Add(new SelectListItem
    {
        Text = "Masculino",
        Value = "MASC",
        Selected = true
    });
    sexo.Add(new SelectListItem
    {
        Text = "Femenino",
        Value = "FEM"
    });

    sexo.Add(new SelectListItem
    {
        Text = "Otros",
        Value = "Otros"
    });

    List<SelectListItem> nacionalidad = new List<SelectListItem>();
    nacionalidad.Add(new SelectListItem
    {
        Text = "Nacional",
        Value = "Nacional",
        Selected = true
    });
    nacionalidad.Add(new SelectListItem
    {
        Text = "Extranjera",
        Value = "Extranjera"
    });

    List<SelectListItem> tipoSangre = new List<SelectListItem>();
    tipoSangre.Add(new SelectListItem
    {
        Text = "A+",
        Value = "A+",
        Selected = true
    });
    tipoSangre.Add(new SelectListItem
    {
        Text = "A-",
        Value = "A-"
    });

    tipoSangre.Add(new SelectListItem
    {
        Text = "B+",
        Value = "B+"
    });

    tipoSangre.Add(new SelectListItem
    {
        Text = "B-",
        Value = "B-"
    });

    tipoSangre.Add(new SelectListItem
    {
        Text = "O+",
        Value = "O+"
    });

    tipoSangre.Add(new SelectListItem
    {
        Text = "O-",
        Value = "O-"
    });

    tipoSangre.Add(new SelectListItem
    {
        Text = "AB+",
        Value = "AB+"
    });

    tipoSangre.Add(new SelectListItem
    {
        Text = "AB-",
        Value = "AB-"
    });

    List<SelectListItem> estadoCivil = new List<SelectListItem>();
    estadoCivil.Add(new SelectListItem
    {
        Text = "Soltero/a",
        Value = "Soltero/a",
        Selected = true
    });

    estadoCivil.Add(new SelectListItem
    {
        Text = "Casado/a",
        Value = "Casado/a"
    });

    estadoCivil.Add(new SelectListItem
    {
        Text = "Comprometido/a",
        Value = "Comprometido/a"
    });

    estadoCivil.Add(new SelectListItem
    {
        Text = "En relación",
        Value = "EnRelacion"
    });

    estadoCivil.Add(new SelectListItem
    {
        Text = "Unión libre",
        Value = "UnionLibre"
    });

    estadoCivil.Add(new SelectListItem
    {
        Text = "Divorciado/a",
        Value = "Divorciado/a"
    });

    estadoCivil.Add(new SelectListItem
    {
        Text = "Viudo/a",
        Value = "Viudo/a"
    });
}


<div class="panel panel-default">
    <div class="panel panel-heading">
        <strong>Nuevo Empeleado</strong>
    </div>
    <div class="panel panel-body">



        @using (Html.BeginForm("APContratacion", "AccionesDePersonal", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })



                <div class="col-md-5">

                    <div class="form-group">
                        <div class="col-md-8">
                            @Html.HiddenFor(model => model.ObservacionesAP, new { htmlAttributes = new { @class = "form-control" } })
                            
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdNacionalidad, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("IdNacionalidad", new SelectList(ViewBag.Nacionalidad, "IdNacionalidad", "Descripcion"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdNacionalidad, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdDepartamento, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("IdDepartamento", new SelectList(ViewBag.Departamento, "IdDepartamento", "Descripcion"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdDepartamento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdPuesto, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("IdPuesto", new SelectList(ViewBag.Puesto, "IdPuesto", "Descripcion"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdPuesto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdNomina, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("IdNomina", new SelectList(ViewBag.Nomina, "IdNomina", "Descripcion"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdNomina, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.IdFormaPago, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("IdFormaPago", new SelectList(ViewBag.FormaPago, "IdFormaPago", "Descripcion"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdFormaPago, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdRegimenVacacional, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownList("IdRegimenVacacional", new SelectList(ViewBag.ControlVacacional, "IdRegimenVacacional", "Descripcion"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdRegimenVacacional, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FechaRige, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.FechaRige, new { htmlAttributes = new { @class = "datepicker form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.FechaRige, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.FechaVence, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FechaVence, new { htmlAttributes = new { @class = "datepicker form-control", type = "date" } })
                                @Html.ValidationMessageFor(model => model.FechaVence, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.AhorroAsociacion, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.AhorroAsociacion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AhorroAsociacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CodigoEmpleado, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CodigoEmpleado, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CodigoEmpleado, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <p class="text-danger col-md-offset-2 col-md-10">
                        @ViewBag.Mensaje
                    </p>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmpleadoPrimerNombre, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.EmpleadoPrimerNombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmpleadoPrimerNombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmpleadoSegundoNombre, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.EmpleadoSegundoNombre, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmpleadoSegundoNombre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmpleadoPrimerApellido, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.EmpleadoPrimerApellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmpleadoPrimerApellido, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EmpleadoSegundoApellido, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.EmpleadoSegundoApellido, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.EmpleadoSegundoApellido, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-8">
                            @Html.HiddenFor(model => model.IdTipoAP, new { htmlAttributes = new { @class = "form-control" } })
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.TipoIdentificacion, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.TipoIdentificacion, nacionalidad, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TipoIdentificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NumeroIdentificacion, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.NumeroIdentificacion, new { @class = "form-control", @id = "cedula" })
                            @Html.ValidationMessageFor(model => model.NumeroIdentificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-4" })
                            <input type="file" class="form-control" id="foto" name="foto" />

                        </div>*@
                    <div class="panel panel-body" style="min-height:256px">
                        <div class="col-md-8">

                            <div class="col-md-12">

                                <input type="file" id="imageBrowes" name="foto" />
                                <div class="img-responsive">
                                    <div id="imgPreview" class="thumbnail" style="display:none">
                                        <img class="img-responsive" id="targetImg" />
                                        <div class="caption">
                                            <a href="#" onclick="ClearPreview()"><i class="glyphicon glyphicon-trash"></i></a>
                                            <span id="description"></span>
                                        </div>
                                    </div>
                                </div>



                            </div>

                        </div>

                    </div>

                </div>

                <div class="col-md-5">


                    <div class="form-group">
                        @Html.LabelFor(model => model.TelefonoPrincipal, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.TelefonoPrincipal, new { @class = "form-control", @id = "telPrincipal" })
                            @Html.ValidationMessageFor(model => model.TelefonoPrincipal, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TelefonoSecundario, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.TelefonoSecundario, new { @class = "form-control", @id = "telSecundario" })
                            @Html.ValidationMessageFor(model => model.TelefonoSecundario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TelefonoEmergencia, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.TextBoxFor(model => model.TelefonoEmergencia, new { @class = "form-control", @id = "telEmergencia" })
                            @Html.ValidationMessageFor(model => model.TelefonoEmergencia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ContactoEmergencia, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ContactoEmergencia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ContactoEmergencia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TipoSangre, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.TipoSangre, tipoSangre, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TipoSangre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FechaNacimiento, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.FechaNacimiento, new { htmlAttributes = new { @class = "datepicker form-control", @type = "date" } })
                            @Html.ValidationMessageFor(model => model.FechaNacimiento, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.DireccionDomicilio, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.DireccionDomicilio, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.DireccionDomicilio, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Sexo, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.Sexo, sexo, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Sexo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.EstadoCivil, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.DropDownListFor(model => model.EstadoCivil, estadoCivil, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.EstadoCivil, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.SubEstado, htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.SubEstado, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.SubEstado, "", new { @class = "text-danger" })
                            </div>
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.CorreoElectronico, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.CorreoElectronico, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CorreoElectronico, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConyugeDependiente, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.CheckBoxFor(model => model.ConyugeDependiente, new { @class = "toggle-switch" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.HijosDependientes, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.HijosDependientes, new { htmlAttributes = new { @class = "form-control", @min = "0" } })
                            @Html.ValidationMessageFor(model => model.HijosDependientes, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NumeroAsegurado, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.NumeroAsegurado, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NumeroAsegurado, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SalarioReferencia, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.SalarioReferencia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SalarioReferencia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ObservacionesGenerales, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ObservacionesGenerales, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ObservacionesGenerales, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ObservacionesAP, htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.ObservacionesAP, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ObservacionesAP, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>



                <div class="form-group">
                    <div class="col-md-offset-4 col-md-6">
                        <input type="submit" value="Ingresar" class="btn btn-success" />
                        @Html.ActionLink("Cancelar", "Index", "Empleados", null, new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
        }

    </div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script src="~/Scripts/jquery-3.3.1.min.js"></script>

<script src="~/Scripts/inputmask/jquery.inputmask.min.js"></script>

<script>
    $(document).ready(function ($) {
   //$('#telSecundario').inputmask("9999-9999");
        $("#telPrincipal").inputmask("mask", { "mask": "9999-9999" });
        $("#telSecundario").inputmask("mask", { "mask": "9999-9999" });
        $("#telEmergencia").inputmask("mask", { "mask": "9999-9999" });
        $("#cedula").inputmask("mask", {"mask": "999999999"});
});
</script>

<script>

    $(document).ready(function () {

        $("#imageBrowes").change(function () {

            var File = this.files;

            if (File && File[0]) {
                ReadImage(File[0]);
            }
        })

    })

    var ReadImage = function (file) {

        var reader = new FileReader;
        var image = new Image;

        reader.readAsDataURL(file);
        reader.onload = function (_file) {

            image.src = _file.target.result;
            image.onload = function () {

                var height = this.height;
                var width = this.width;
                var type = file.type;
                var size = ~~(file.size / 1024) + "KB";

                $("#targetImg").attr('src', _file.target.result);
                $("#description").text("Tamaño:" + size + ", " + height + "X " + width + ", " + type + "");
                $("#imgPreview").show();

            }

        }

    }

    var ClearPreview = function () {
        $("#imageBrowes").val('');
        $("#description").text('');
        $("#imgPreview").hide();

    }

</script>